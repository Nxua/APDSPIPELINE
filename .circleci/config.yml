version: 2.1

executors:
  node-executor:
    docker:
      - image: circleci/node:14  # Use the Node 14 Docker image, adjust as necessary
    working_directory: ~/app
    environment:
      NODE_ENV: test
      SONAR_TOKEN: ${SONAR_TOKEN}  # Load SONAR_TOKEN from CircleCI environment variables

jobs:
  install_dependencies:
    executor: node-executor
    steps:
      - checkout
      - restore_cache:
          keys:
            - v1-node-deps-{{ checksum "package-lock.json" }}
      - run:
          name: Install Dependencies
          command: npm install
      - save_cache:
          paths:
            - node_modules
          key: v1-node-deps-{{ checksum "package-lock.json" }}

  run_tests:
    executor: node-executor
    steps:
      - checkout
      - restore_cache:
          keys:
            - v1-node-deps-{{ checksum "package-lock.json" }}
      - run:
          name: Run Unit Tests
          command: npm test

  lint_code:
    executor: node-executor
    steps:
      - checkout
      - restore_cache:
          keys:
            - v1-node-deps-{{ checksum "package-lock.json" }}
      - run:
          name: Run Linting
          command: npm run lint  # Make sure you have a "lint" script in package.json

  sonar_scan:
    executor: node-executor
    steps:
      - checkout
      - run:
          name: Run SonarQube Scan
          command: |
            npx sonar-scanner \
              -Dsonar.projectKey=your_project_key \
              -Dsonar.organization=your_organization_key \
              -Dsonar.host.url=https://sonarcloud.io \
              -Dsonar.login=$SONAR_TOKEN

workflows:
  version: 2
  test_and_analyze:
    jobs:
      - install_dependencies
      - run_tests:
          requires:
            - install_dependencies
      - lint_code:
          requires:
            - install_dependencies
      - sonar_scan:
          requires:
            - run_tests
            - lint_code
